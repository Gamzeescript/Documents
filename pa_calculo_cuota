drop procedure if exists pa_calculo_cuota;
-- procedimiento almacenado que asigna la cuota basado en esta formula
-- de matematica financiera
-- a=(precio del carro)[(i/m)(1+(i/m))/(((1+(i/m))^nm)-1)]

DELIMITER //
CREATE PROCEDURE pa_calculo_cuota(pa_id_solicitud int, pa_meses_pago int, pa_tasa_interes double, pa_dia_pago int)
BEGIN
set @precio = (Select SUM(dv.total) from solicitudes s
inner join detalle_ventas dv on s.id_venta = dv.id_venta
inner join vehiculos v on dv.id_vehiculo = v.id_vehiculo where dv.id_venta=(Select s.id_venta from solicitudes s where s.id_solicitud=pa_id_solicitud) and s.id_solicitud = (Select s.id_solicitud from solicitudes s where s.id_solicitud=pa_id_solicitud));

-- precalculo 
set @tacita = ((pa_tasa_interes/100)/12);

-- primer calculo 
set @primero = 1 + @tacita;
-- segundo calculo 
set @powcito = (Select POW(@primero,pa_meses_pago));
-- tercer calculo pero de tasa entre lo otro 
set @calculobaseprimera =  @powcito * @tacita; 
-- cuarto calculo 
set @basecalculo = @powcito - 1;
-- quinto calculo 
set @quintodivision = @calculobaseprimera / @basecalculo;
-- ultimo calculo 
set @cuotadefinitiva = @precio * @quintodivision;

select @tacita;
select @precio;
select @primero;
select @powcito;
SELECT @calculobaseprimera;
select @basecalculo;
select @quintodivision;
select @cuotadefinitiva;

set @estado_p = "vigente";

insert into contratos(id_solicitud, meses_pago, tasa_interes, cuota_asignada, dia_pago, estado) values(pa_id_solicitud, pa_meses_pago, pa_tasa_interes, @cuotadefinitiva, pa_dia_pago, @estado_p);
END //
DELIMITER ;

CALL pa_calculo_cuota(62,36,15,19);





